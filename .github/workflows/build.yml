name: CMake

on:
  push:
    paths:
      - '**.cpp'
      - '**.hpp'
      - '.github/workflows/**'
      
  pull_request:
    branches: [ main ]
    paths:
      - '**.cpp'
      - '**.hpp'
env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        container: ["gcc:12", "gcc:11", "debian:11", "ubuntu:22.10"]
    name: ${{ matrix.container }}
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}

    steps:
    - uses: actions/checkout@v2

    - name: Install package
      run: apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install g++ cmake valgrind libcppunit-dev cppcheck clang-tidy-11 libboost-program-options-dev ccache gcovr pkg-config

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Check 1 -> cppcheck
      run: cmake --build ${{github.workspace}}/build --target cppcheck

    - name: Test
      run: cmake --build ${{github.workspace}}/build --target test
      
    - name: Coverage
      run: gcovr -r ../ .

    - name: Memcheck
      run: cd ${{github.workspace}}/build && ctest -E ".py" --overwrite MemoryCheckCommandOptions="--leak-check=full --error-exitcode=100" -T memcheck